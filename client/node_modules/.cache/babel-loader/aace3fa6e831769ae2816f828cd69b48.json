{"ast":null,"code":"import _slicedToArray from \"/Users/Teva/Desktop/Cleanup/Translator/whatson/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Teva/Desktop/Cleanup/Translator/whatson/src/components/LanguageChoice/LanguageChoice.jsx\";\nimport React, { useState } from 'react';\nimport { LanguageChoiceContainer } from './LanguageChoiceStyles';\n\nconst LanguageChoice = ({\n  language,\n  languageCode,\n  handler\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isPressed = _useState2[0],\n        setIsPressed = _useState2[1];\n\n  return React.createElement(LanguageChoiceContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: isPressed ? \"pressed\" : null,\n    onClick: event => {\n      setIsPressed(isPressed => !isPressed);\n      handler(languageCode, event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, languageCode.slice(0, 2).toUpperCase()), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, language));\n};\n\nexport default LanguageChoice;","map":{"version":3,"sources":["/Users/Teva/Desktop/Cleanup/Translator/whatson/src/components/LanguageChoice/LanguageChoice.jsx"],"names":["React","useState","LanguageChoiceContainer","LanguageChoice","language","languageCode","handler","isPressed","setIsPressed","event","slice","toUpperCase"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,uBADF,QAEO,wBAFP;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAAA,oBAC1BL,QAAQ,CAAC,KAAD,CADkB;AAAA;AAAA,QACtDM,SADsD;AAAA,QAC3CC,YAD2C;;AAG9D,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAED,SAAS,GAAG,SAAH,GAAe,IAA3C;AAAiD,IAAA,OAAO,EAAGE,KAAD,IAAW;AACnED,MAAAA,YAAY,CAACD,SAAS,IAAI,CAACA,SAAf,CAAZ;AACAD,MAAAA,OAAO,CAACD,YAAD,EAAeI,KAAf,CAAP;AAA6B,KAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKJ,YAAY,CAACK,KAAb,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,WAAzB,EAHL,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,QAAL,CALF,CADF;AASD,CAZD;;AAcA,eAAeD,cAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  LanguageChoiceContainer\n} from './LanguageChoiceStyles';\n\nconst LanguageChoice = ({ language, languageCode, handler }) => {\n  const [ isPressed, setIsPressed ] = useState(false);\n\n  return (\n    <LanguageChoiceContainer>\n      <button className={isPressed ? \"pressed\" : null} onClick={(event) => {\n        setIsPressed(isPressed => !isPressed)\n        handler(languageCode, event)}\n        }>{languageCode.slice(0, 2).toUpperCase()}</button>\n      <h5>{language}</h5>\n    </LanguageChoiceContainer>\n  )\n}\n\nexport default LanguageChoice;"]},"metadata":{},"sourceType":"module"}